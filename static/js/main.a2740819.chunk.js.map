{"version":3,"sources":["Node.js","App.js","index.js"],"names":["Node","val","this","props","mousedown","c","source","id","destination","className","onMouseOver","e","handleClick","onClick","Component","App","console","log","state","gamestate","curgraph","graph","setState","shownext","algorithm","handleNext","curstate","q","push","queue","go","mabs","a","dfs","over","pathfound","makepath","playbfs","reset","window","location","reload","check","x","y","row","col","path","cur","parent","cnt","idx","pathid","setInterval","length","clearInterval","pathprinted","myid","curparent","shift","currow","Math","floor","curcol","d","i","j","neighbour","delay","ms","Promise","resolve","setTimeout","src","algoselect","algo","handleback","p","document","addEventListener","show","map","node","ReactDOM","render","StrictMode","getElementById"],"mappings":"2OAEMA,E,4JACJ,WAAU,IAAD,OACCC,EAAQC,KAAKC,MAAbF,IACAG,EAAcF,KAAKC,MAAnBC,UACJC,EAAI,GAkBR,OAjBY,GAARJ,EACFI,EAAI,UACY,GAAPJ,EACTI,EAAI,SACY,GAAPJ,EACTI,EAAI,cACY,GAAPJ,EACTI,EAAI,UACY,GAAPJ,IACTI,EAAI,QAEFH,KAAKC,MAAMG,QAAUJ,KAAKC,MAAMI,KAClCF,EAAI,UAEFH,KAAKC,MAAMK,aAAeN,KAAKC,MAAMI,KACvCF,EAAI,eAGJ,qBACEI,UAAW,QAAUJ,EACrBK,YAAa,SAACC,GACRP,GACF,EAAKD,MAAMS,YAAY,EAAKT,MAAMI,KAGtCM,QAAS,WACP,EAAKV,MAAMS,YAAY,EAAKT,MAAMI,W,GA/BzBO,aAsCJd,ICrCTe,E,kDACJ,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAwCRS,YAAc,SAACL,GACbS,QAAQC,IAAIV,GACZ,MAA2C,EAAKW,MAAxCC,EAAR,EAAQA,UAAWb,EAAnB,EAAmBA,OAAQE,EAA3B,EAA2BA,YACvBY,EAAW,EAAKF,MAAMG,MACT,GAAbF,GACkB,GAAhBC,EAASb,GACXa,EAASb,IAAO,EAEhBa,EAASb,GAAM,EAEjB,EAAKe,SAAS,CACZD,MAAOD,KAEa,GAAbD,EACW,GAAhBC,EAASb,MACI,GAAXD,GACFc,EAASb,GAAM,EACf,EAAKe,SAAS,CACZhB,OAAQC,EACRc,MAAOD,MAGTA,EAASd,GAAU,EACnBc,EAASb,GAAM,EACf,EAAKe,SAAS,CACZhB,OAAQC,EACRc,MAAOD,MAIS,GAAbD,GACW,GAAhBC,EAASb,MACS,GAAhBC,GACFY,EAASb,GAAM,EACf,EAAKe,SAAS,CACZd,YAAaD,EACbc,MAAOD,MAGTA,EAASZ,GAAe,EACxBY,EAASb,GAAM,EACf,EAAKe,SAAS,CACZd,YAAaD,EACbc,MAAOD,MAKfJ,QAAQC,IAAI,EAAKC,MAAMG,QAzFN,EA2FnBE,SAAW,WACT,MAA2C,EAAKL,MAAxCC,EAAR,EAAQA,UAAWb,EAAnB,EAAmBA,OAAnB,EAA2BE,YAC3B,OAAiB,GAAbW,IAEoB,GAAbA,EACsB,IAAxB,EAAKD,MAAMM,UACI,GAAbL,IACS,GAAXb,IAlGQ,EAyGnBmB,WAAa,WACX,IAAMC,EAAW,EAAKR,MAAMC,UAE5B,GADAH,QAAQC,IAAIS,GACI,GAAZA,EAAe,CACjB,IAAIC,EAAI,GACRA,EAAEC,KAAK,EAAKV,MAAMZ,QAClB,IAAIc,EAAW,EAAKF,MAAMG,MAC1BD,EAAS,EAAKF,MAAMZ,QAAU,EAC9B,EAAKgB,SAAS,CACZO,MAAOF,EACPN,MAAOD,IAET,EAAKU,KAGP,EAAKR,SAAS,CACZH,UAAWO,EAAW,KAzHP,EA4HnBK,KAAO,SAACC,GACN,OAAIA,EAAI,GACEA,EAEDA,GAhIQ,EAmInBF,GAnImB,sBAmId,sBAAAE,EAAA,yDAEc,OADK,EAAKd,MAAnBM,UADL,gCAGK,EAAKS,IAAI,EAAKf,MAAMZ,QAHzB,OAID,EAAKgB,SAAS,CAAEY,MAAM,IACL,EAAKhB,MAAMG,MACxB,EAAKH,MAAMiB,WACb,EAAKC,WAPN,uBAUD,EAAKC,UAVJ,4CAnIc,EAgJnBC,MAAQ,WACNC,OAAOC,SAASC,UAjJC,EAmJnBC,MAAQ,SAACC,EAAGC,EAAGC,EAAKC,GAClB,OAAIH,GAAK,GAAKA,EAAIE,GAAOD,GAAK,GAAKA,EAAIE,EAC9B,EAEA,GAvJQ,EA0JnBV,SAAW,WAMT,IALA,IAAIW,EAAO,GACX,EAAgC,EAAK7B,MAA7BZ,EAAR,EAAQA,OACJ0C,EADJ,EAAgBxC,YAEZyC,EAAS,EAAK/B,MAAM+B,OACpBC,EAAM,IACHA,EAAM,GAAKF,GAAO1C,GACvBU,QAAQC,IAAI+B,GACZD,EAAKnB,KAAKoB,GACVA,EAAMC,EAAOD,GACbE,IAEFH,EAAKnB,KAAKoB,GACV,IAAIG,EAAM,EACNC,EAASC,aAAY,WACnBF,GAAOJ,EAAKO,SACdC,cAAcH,GACd,EAAK9B,SAAS,CACZkC,aAAa,KAGjB,IAAIpC,EAAW,EAAKF,MAAMG,MAC1BD,EAAS2B,EAAKI,IAAQ,EACtB,EAAK7B,SAAS,CACZD,MAAOD,IAET+B,IACAnC,QAAQC,IAAI,iBACX,KAtLc,EAwLnBoB,QAAU,WACR,EAAKnB,MAAMuC,KAAOJ,aAAY,WAC5B,MACE,EAAKnC,MADSV,GAAhB,EAAQF,OAAR,EAAgBE,aAAaqC,EAA7B,EAA6BA,IAAKC,EAAlC,EAAkCA,IAAKX,EAAvC,EAAuCA,UAEnCR,GAFJ,EAAkD6B,YAE1C,EAAKtC,MAAMW,OACfT,EAAW,EAAKF,MAAMG,MACtBqC,EAAY,EAAKxC,MAAM+B,OAC3B,GAAgB,GAAZtB,EAAE2B,QAAenB,EACnBoB,cAAc,EAAKrC,MAAMuC,MACzB,EAAKnC,SAAS,CACZY,MAAM,IAER,EAAKE,gBAML,IAJA,IAAIY,EAAMrB,EAAEgC,QACRC,EAASC,KAAKC,MAAMd,EAAMF,GAC1BiB,EAASf,EAAMF,EACfkB,EAAI,EAAE,EAAG,EAAG,GACPC,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,GAAaP,EAASI,EAAEC,IAAMnB,GAAOiB,EAASC,EAAEE,IAExB,GAA1B,EAAKnC,KAAKiC,EAAEC,GAAKD,EAAEE,KACnB,EAAKxB,MAAMkB,EAASI,EAAEC,GAAIF,EAASC,EAAEE,GAAIrB,EAAKC,KACtB,GAAxB1B,EAAS+C,IACc,GAAvB/C,EAAS+C,KAETT,EAAUS,GAAanB,EACvB5B,EAAS+C,GAAa,EACtBxC,EAAEC,KAAKuC,IAKc,GAAzB/C,EAASZ,GACX,EAAKc,SAAS,CACZD,MAAOD,EACPS,MAAOF,EACPQ,WAAW,EACXc,OAAQS,IAGV,EAAKpC,SAAS,CACZD,MAAOD,EACPS,MAAOF,EACPsB,OAAQS,MAGX,IAxOc,EA0OnBU,MAAQ,SAACC,GACP,OAAO,IAAIC,SAAQ,SAACC,GAClBC,WAAWD,EAASF,OA5OL,EA+OnBpC,IA/OmB,uCA+Ob,WAAOwC,GAAP,qCAAAzC,EAAA,yDACAyC,GAAO,EAAKvD,MAAMV,aACpB,EAAKc,SAAS,CACZa,WAAW,KAGO,EAAKjB,MAAnBiB,UANJ,wDAUAf,EAAW,EAAKF,MAAMG,OACjBoD,GAAO,EAChB,EAAKnD,SAAS,CACZD,MAAOD,IAbL,SAeE,EAAKgD,MAAM,GAfb,SAgBiB,EAAKlD,MAAlB2B,EAhBJ,EAgBIA,IAAKC,EAhBT,EAgBSA,IACTE,EAAMyB,EACNb,EAASC,KAAKC,MAAMd,EAAMF,GAC1BiB,EAASf,EAAMF,EACfY,EAAY,EAAKxC,MAAM+B,OAC3B7B,EAAW,EAAKF,MAAMG,MAClB2C,EAAI,EAAE,EAAG,EAAG,GACPC,EAAI,EAvBT,aAuBYA,EAAI,GAvBhB,iBAwBOC,EAAI,EAxBX,aAwBcA,EAAI,GAxBlB,oBAyBIC,GAAaP,EAASI,EAAEC,IAAMnB,GAAOiB,EAASC,EAAEE,IAExB,GAA1B,EAAKnC,KAAKiC,EAAEC,GAAKD,EAAEE,MACnB,EAAKxB,MAAMkB,EAASI,EAAEC,GAAIF,EAASC,EAAEE,GAAIrB,EAAKC,KACtB,GAAxB1B,EAAS+C,IACc,GAAvB/C,EAAS+C,GA9BX,wBAgCET,EAAUS,GAAanB,EACvB,EAAK1B,SAAS,CACZ2B,OAAQS,IAlCZ,UAoCQ,EAAKzB,IAAIkC,GApCjB,QAwBqBD,IAxBrB,wBAuBmBD,IAvBnB,8FA/Oa,wDAyRnBS,WAAa,SAACC,GACZ,EAAKrD,SAAS,CACZE,UAAWmD,KA3RI,EA8RnBC,WAAa,WACX,IAAIlD,EAAW,EAAKR,MAAMC,UAC1B,EAAKG,SAAS,CACZH,UAAWO,EAAW,KA/RxB,EAAKR,MAAQ,CACXG,MAAO,GACPF,UAAW,EACXb,QAAS,EACTE,aAAc,EACdqC,IAAK,GACLC,IAAK,GACL1C,WAAW,EACXyB,MAAO,GACPM,WAAW,EACXqB,aAAa,EACbP,OAAQ,GACRzB,UAAW,GACXU,MAAM,GAfS,E,qDAkBnB,WAIE,IAJmB,IAAD,OACd2C,EAAI,GACJlD,EAAI,GACR,EAAqBzB,KAAKgB,MAAlB2B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACJmB,EAAI,EAAGA,EAAIpB,EAAMC,EAAKmB,IAC7BY,EAAEjD,KAAK,GACPD,EAAEC,KAAK,GAET1B,KAAKoB,SAAS,CACZD,MAAOwD,EACP5B,OAAQtB,IAEVmD,SAASC,iBAAiB,aAAa,WACrC,EAAKzD,SAAS,CACZlB,WAAW,OAGf0E,SAASC,iBAAiB,WAAW,WACnC,EAAKzD,SAAS,CACZlB,WAAW,S,oBA+PjB,WAAU,IAAD,OACCiB,EAAUnB,KAAKgB,MAAfG,MACAF,EAAcjB,KAAKgB,MAAnBC,UACR,EAAgCjB,KAAKgB,MAA7BZ,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,YAChB,EAAyCN,KAAKgB,MAAzBiB,GAArB,EAAQqB,YAAR,EAAqBrB,WAAWD,EAAhC,EAAgCA,KAC5B8C,EAAO9E,KAAKqB,WACVoD,EAAOzE,KAAKgB,MAAMM,UACxB,OACE,gCACE,sBAAKf,UAAU,UAAf,UACgB,GAAbU,GAAkB,qEACL,GAAbA,GAAkB,sEACL,GAAbA,GAAkB,sDACL,GAAbA,IAAkC,GAAhBX,GACjB,2DAEc,GAAfmE,EAAKrB,QACJ,sBAAK7C,UAAU,WAAf,6BAA2CkE,MAE5B,GAAhBnE,GAAkC,GAAbW,GAAkB,oDAC/B,GAARe,GAA8B,GAAbf,GAAkB,yCAC3B,GAARe,GAAgBC,GAAa,4CACrB,GAARD,GAA6B,GAAbC,GAAsB,gDACtCD,GAAQ,wBAAQrB,QAASX,KAAKoC,MAAtB,mBACR0C,GAAQ,wBAAQnE,QAASX,KAAKuB,WAAtB,mBACQ,GAAhBjB,IAAgC,GAAXF,GAA6B,GAAba,GACpC,wBAAQN,QAASX,KAAKuB,WAAtB,mBAEY,GAAbN,GACC,wBAAQN,QAAS,kBAAM,EAAK6D,WAAW,QAAvC,iBAEY,GAAbvD,GACC,wBAAQN,QAAS,kBAAM,EAAK6D,WAAW,QAAvC,iBAEDvD,EAAY,GAAa,GAARe,GAA8B,GAAbf,GACjC,wBAAQN,QAASX,KAAK0E,WAAtB,qBAGJ,qBAAKnE,UAAU,QAAf,SACGY,EAAM4D,KAAI,SAACC,EAAM3E,GAChB,OACE,cAAC,EAAD,CAEEK,YAAa,EAAKA,YAClBN,OAAQ,EAAKY,MAAMZ,OACnBE,YAAa,EAAKU,MAAMV,YACxBP,IAAKiF,EACL3E,GAAIA,EACJH,UAAW,EAAKc,MAAMd,WANjBG,e,GA/UHO,aA+VHC,IC7VfoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFP,SAASQ,eAAe,W","file":"static/js/main.a2740819.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Node extends Component {\r\n  render() {\r\n    const { val } = this.props;\r\n    const { mousedown } = this.props;\r\n    let c = \"\";\r\n    if (val == -1) {\r\n      c = \"blocked\";\r\n    } else if (val == 1) {\r\n      c = \"source\";\r\n    } else if (val == 2) {\r\n      c = \"destination\";\r\n    } else if (val == 3) {\r\n      c = \"visited\";\r\n    } else if (val == 4) {\r\n      c = \"path\";\r\n    }\r\n    if (this.props.source == this.props.id) {\r\n      c = \"source\";\r\n    }\r\n    if (this.props.destination == this.props.id) {\r\n      c = \"destination\";\r\n    }\r\n    return (\r\n      <div\r\n        className={\"node \" + c}\r\n        onMouseOver={(e) => {\r\n          if (mousedown) {\r\n            this.props.handleClick(this.props.id);\r\n          }\r\n        }}\r\n        onClick={() => {\r\n          this.props.handleClick(this.props.id);\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Node;\r\n","import React, { Component } from \"react\";\r\nimport Node from \"./Node\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      graph: [],\r\n      gamestate: 0,\r\n      source: -1,\r\n      destination: -1,\r\n      row: 20,\r\n      col: 40,\r\n      mousedown: false,\r\n      queue: [],\r\n      pathfound: false,\r\n      pathprinted: false,\r\n      parent: [],\r\n      algorithm: \"\",\r\n      over: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let p = [];\r\n    let q = [];\r\n    const { row, col } = this.state;\r\n    for (let i = 0; i < row * col; i++) {\r\n      p.push(0);\r\n      q.push(0);\r\n    }\r\n    this.setState({\r\n      graph: p,\r\n      parent: q,\r\n    });\r\n    document.addEventListener(\"mousedown\", () => {\r\n      this.setState({\r\n        mousedown: true,\r\n      });\r\n    });\r\n    document.addEventListener(\"mouseup\", () => {\r\n      this.setState({\r\n        mousedown: false,\r\n      });\r\n    });\r\n  }\r\n  handleClick = (id) => {\r\n    console.log(id);\r\n    const { gamestate, source, destination } = this.state;\r\n    let curgraph = this.state.graph;\r\n    if (gamestate == 0) {\r\n      if (curgraph[id] == 0) {\r\n        curgraph[id] = -1;\r\n      } else {\r\n        curgraph[id] = 0;\r\n      }\r\n      this.setState({\r\n        graph: curgraph,\r\n      });\r\n    } else if (gamestate == 2) {\r\n      if (curgraph[id] == 0) {\r\n        if (source == -1) {\r\n          curgraph[id] = 1;\r\n          this.setState({\r\n            source: id,\r\n            graph: curgraph,\r\n          });\r\n        } else {\r\n          curgraph[source] = 0;\r\n          curgraph[id] = 1;\r\n          this.setState({\r\n            source: id,\r\n            graph: curgraph,\r\n          });\r\n        }\r\n      }\r\n    } else if (gamestate == 3) {\r\n      if (curgraph[id] == 0) {\r\n        if (destination == -1) {\r\n          curgraph[id] = 2;\r\n          this.setState({\r\n            destination: id,\r\n            graph: curgraph,\r\n          });\r\n        } else {\r\n          curgraph[destination] = 0;\r\n          curgraph[id] = 2;\r\n          this.setState({\r\n            destination: id,\r\n            graph: curgraph,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    console.log(this.state.graph);\r\n  };\r\n  shownext = () => {\r\n    const { gamestate, source, destination } = this.state;\r\n    if (gamestate == 0) {\r\n      return true;\r\n    } else if (gamestate == 1) {\r\n      return this.state.algorithm != \"\";\r\n    } else if (gamestate == 2) {\r\n      return source != -1;\r\n    } else if (gamestate == 3) {\r\n      return false;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  handleNext = () => {\r\n    const curstate = this.state.gamestate;\r\n    console.log(curstate);\r\n    if (curstate == 3) {\r\n      let q = [];\r\n      q.push(this.state.source);\r\n      let curgraph = this.state.graph;\r\n      curgraph[this.state.source] = 3;\r\n      this.setState({\r\n        queue: q,\r\n        graph: curgraph,\r\n      });\r\n      this.go();\r\n      // this.playbfs();\r\n    }\r\n    this.setState({\r\n      gamestate: curstate + 1,\r\n    });\r\n  };\r\n  mabs = (a) => {\r\n    if (a < 0) {\r\n      return -a;\r\n    } else {\r\n      return a;\r\n    }\r\n  };\r\n  go = async () => {\r\n    const { algorithm } = this.state;\r\n    if (algorithm == \"DFS\") {\r\n      await this.dfs(this.state.source);\r\n      this.setState({ over: true });\r\n      const curgraph = this.state.graph;\r\n      if (this.state.pathfound) {\r\n        this.makepath();\r\n      }\r\n    } else {\r\n      this.playbfs();\r\n    }\r\n  };\r\n  reset = () => {\r\n    window.location.reload();\r\n  };\r\n  check = (x, y, row, col) => {\r\n    if (x >= 0 && x < row && y >= 0 && y < col) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n  makepath = () => {\r\n    let path = [];\r\n    const { source, destination } = this.state;\r\n    let cur = destination;\r\n    let parent = this.state.parent;\r\n    let cnt = 500;\r\n    while (cnt > 0 && cur != source) {\r\n      console.log(cur);\r\n      path.push(cur);\r\n      cur = parent[cur];\r\n      cnt--;\r\n    }\r\n    path.push(cur);\r\n    let idx = 0;\r\n    let pathid = setInterval(() => {\r\n      if (idx == path.length) {\r\n        clearInterval(pathid);\r\n        this.setState({\r\n          pathprinted: true,\r\n        });\r\n      }\r\n      let curgraph = this.state.graph;\r\n      curgraph[path[idx]] = 4;\r\n      this.setState({\r\n        graph: curgraph,\r\n      });\r\n      idx++;\r\n      console.log(\"making path\");\r\n    }, 10);\r\n  };\r\n  playbfs = () => {\r\n    this.state.myid = setInterval(() => {\r\n      const { source, destination, row, col, pathfound, pathprinted } =\r\n        this.state;\r\n      let q = this.state.queue;\r\n      let curgraph = this.state.graph;\r\n      let curparent = this.state.parent;\r\n      if (q.length == 0 || pathfound) {\r\n        clearInterval(this.state.myid);\r\n        this.setState({\r\n          over: true,\r\n        });\r\n        this.makepath();\r\n      } else {\r\n        let cur = q.shift();\r\n        let currow = Math.floor(cur / col);\r\n        let curcol = cur % col;\r\n        let d = [-1, 0, 1];\r\n        for (let i = 0; i < 3; i++) {\r\n          for (let j = 0; j < 3; j++) {\r\n            let neighbour = (currow + d[i]) * col + (curcol + d[j]);\r\n            if (\r\n              this.mabs(d[i] - d[j]) == 1 &&\r\n              this.check(currow + d[i], curcol + d[j], row, col) &&\r\n              curgraph[neighbour] != -1 &&\r\n              curgraph[neighbour] != 3\r\n            ) {\r\n              curparent[neighbour] = cur;\r\n              curgraph[neighbour] = 3;\r\n              q.push(neighbour);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (curgraph[destination] == 3) {\r\n        this.setState({\r\n          graph: curgraph,\r\n          queue: q,\r\n          pathfound: true,\r\n          parent: curparent,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          graph: curgraph,\r\n          queue: q,\r\n          parent: curparent,\r\n        });\r\n      }\r\n    }, 1);\r\n  };\r\n  delay = (ms) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, ms);\r\n    });\r\n  };\r\n  dfs = async (src) => {\r\n    if (src == this.state.destination) {\r\n      this.setState({\r\n        pathfound: true,\r\n      });\r\n    }\r\n    const { pathfound } = this.state;\r\n    if (pathfound) {\r\n      return;\r\n    }\r\n    let curgraph = this.state.graph;\r\n    curgraph[src] = 3;\r\n    this.setState({\r\n      graph: curgraph,\r\n    });\r\n    await this.delay(3);\r\n    const { row, col } = this.state;\r\n    let cur = src;\r\n    let currow = Math.floor(cur / col);\r\n    let curcol = cur % col;\r\n    let curparent = this.state.parent;\r\n    curgraph = this.state.graph;\r\n    let d = [-1, 0, 1];\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        let neighbour = (currow + d[i]) * col + (curcol + d[j]);\r\n        if (\r\n          this.mabs(d[i] - d[j]) == 1 &&\r\n          this.check(currow + d[i], curcol + d[j], row, col) &&\r\n          curgraph[neighbour] != -1 &&\r\n          curgraph[neighbour] != 3\r\n        ) {\r\n          curparent[neighbour] = cur;\r\n          this.setState({\r\n            parent: curparent,\r\n          });\r\n          await this.dfs(neighbour);\r\n        }\r\n      }\r\n    }\r\n    return;\r\n  };\r\n  algoselect = (algo) => {\r\n    this.setState({\r\n      algorithm: algo,\r\n    });\r\n  };\r\n  handleback = () => {\r\n    let curstate = this.state.gamestate;\r\n    this.setState({\r\n      gamestate: curstate - 1,\r\n    });\r\n  };\r\n  render() {\r\n    const { graph } = this.state;\r\n    const { gamestate } = this.state;\r\n    const { source, destination } = this.state;\r\n    const { pathprinted, pathfound, over } = this.state;\r\n    let show = this.shownext();\r\n    const algo = this.state.algorithm;\r\n    return (\r\n      <div>\r\n        <div className=\"heading\">\r\n          {gamestate == 0 && <h1>Please click On cells to block them</h1>}\r\n          {gamestate == 1 && <h1>Please Select Algorithm to visualize</h1>}\r\n          {gamestate == 2 && <h1>Please choose Source</h1>}\r\n          {gamestate == 3 && destination == -1 && (\r\n            <h1>Please Select Destination</h1>\r\n          )}\r\n          {algo.length != 0 && (\r\n            <div className=\"algohead\">Selected Algo : {algo}</div>\r\n          )}\r\n          {destination != -1 && gamestate == 3 && <h1>Please click start</h1>}\r\n          {over == false && gamestate == 4 && <h1>Started</h1>}\r\n          {over == true && pathfound && <h1>Path Found</h1>}\r\n          {over == true && pathfound == false && <h1>Path Not Found</h1>}\r\n          {over && <button onClick={this.reset}>Reset</button>}\r\n          {show && <button onClick={this.handleNext}>Next</button>}\r\n          {destination != -1 && source != -1 && gamestate == 3 && (\r\n            <button onClick={this.handleNext}>Start</button>\r\n          )}\r\n          {gamestate == 1 && (\r\n            <button onClick={() => this.algoselect(\"BFS\")}>BFS</button>\r\n          )}\r\n          {gamestate == 1 && (\r\n            <button onClick={() => this.algoselect(\"DFS\")}>DFS</button>\r\n          )}\r\n          {gamestate > 0 && over == false && gamestate != 4 && (\r\n            <button onClick={this.handleback}>Back</button>\r\n          )}\r\n        </div>\r\n        <div className=\"graph\">\r\n          {graph.map((node, id) => {\r\n            return (\r\n              <Node\r\n                key={id}\r\n                handleClick={this.handleClick}\r\n                source={this.state.source}\r\n                destination={this.state.destination}\r\n                val={node}\r\n                id={id}\r\n                mousedown={this.state.mousedown}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}